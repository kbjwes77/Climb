<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_checkpoint</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x += 16;
y += 16;

event_inherited();

data[?"checkpoint"] = false;

event_user(0);

w = sqrt(3)/2 * 32;
h = 32;
r = 16;

ry1 = (y-h/2) + r/2;
ry2 = (y+h/2) - r/2;

dir = 0;
spin = 0;
spin_to = 20;
alpha = 0.75;
check = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s = sin(current_time/400);
ry1 = (y-h/2) + r/2 + s*3;
ry2 = (y+h/2) - r/2 + s*3;

if (check)
    {
    draw_sprite_ext(spr_lamp,1,x-16,y-16 + s*3,1,1,0,-1,(alpha-0.75)*3);
    
    alpha += (1-alpha)*0.02;
    spin += (spin_to-spin)*0.2;
    spin_to += (2.718-spin_to)*0.02;
    dir += spin;
    }

draw_primitive_begin(pr_linelist);

var ldx1 = lengthdir_x(1,dir);
var ldy1 = lengthdir_y(1,dir);
for(var i=0; i&lt;4; i++;)
    {
    var ldx2 = lengthdir_x(1,dir + (i+1)*90);
    var ldy2 = lengthdir_y(1,dir + (i+1)*90);
    
    draw_vertex_color(x + ldx1*w/2,ry1 + ldy1*r/2,$FFFFFF,alpha);
    draw_vertex_color(x + ldx2*w/2,ry1 + ldy2*r/2,$FFFFFF,alpha);
    
    draw_vertex_color(x + ldx1*w/2,ry2 + ldy1*r/2,$FFFFFF,alpha);
    draw_vertex_color(x + ldx2*w/2,ry2 + ldy2*r/2,$FFFFFF,alpha);
    
    draw_vertex_color(x + ldx1*w/2,ry1 + ldy1*r/2,$FFFFFF,alpha);
    draw_vertex_color(x + ldx1*w/2,ry2 + ldy1*r/2,$FFFFFF,alpha);
    
    ldx1 = ldx2;
    ldy1 = ldy2;
    }

draw_primitive_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
