<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_entity</parentName>
  <maskName>msk_32x32</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;

event_inherited();

logic_input_enabled = true;

data[?"max_length"] = 3;
property_add("length",3);

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Adjust Properties Using Inputs

if (input_map[?"length"] == noone)
    {
    cur_length = max_length;
    image_yscale = cur_length+1;
    cranking = 0;
    }
else
    {
    cranking = 0;
    if (input_map[?"length"].logic_output == 1)
        {
        if (cur_length &lt; max_length)
            {
            cur_length += 0.1;
            image_yscale = cur_length+1;
            cranking = +1;
            }
        }
    else
        {
        if (cur_length &gt; 0)
            {
            cur_length -= 0.1;
            image_yscale = cur_length+1;
            cranking = -1;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init/Reset

max_length = data[?"max_length"];
cur_length = data[?"length"];
image_yscale = cur_length+1;
climb_id = noone;
cranking = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.debug)
    {
    draw_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,1);
    draw_rectangle(x+8,y+16,x+24,y+16 + cur_length*32,1);
    }

draw_sprite(sprite_index,2,x,y);

if (cur_length &gt; 0)
    {
    var f_len1 = floor(cur_length);
    for(var i=0; i&lt;f_len1; i++;)
        draw_sprite(sprite_index,0,x,y+16 + i*32);
    
    var f_len2 = frac(cur_length);
    if (f_len2 &gt; 0)
        draw_sprite_part(sprite_index,0,0,0,32,f_len2*32,x,y+16 + f_len1*32);
    }

draw_sprite(sprite_index,1,x,y+15 + cur_length*32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
